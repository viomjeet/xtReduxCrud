{"version":3,"sources":["components/allusers.js","components/adduser.js","components/edituser.js","App.js","index.js"],"names":["Allusers","store","editRow","deleteRow","className","allusers","map","items","index","key","id","name","email","type","onClick","Adduser","userInput","addRow","user","onSubmit","placeholder","value","onChange","required","Edituser","edituser","edituserInput","saveEditUser","hideEdit","App","useSelector","dispatch","useDispatch","useState","show","setShow","setUser","setEditUser","item","window","confirm","deleteUser","Container","Row","Col","md","event","preventDefault","addUser","e","length","target","updateUser","cusState","editUsers","preload","editUser","createStore","state","action","filter","x","push","updtusr","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cacc8b2f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Allusers({ store, editRow, deleteRow }) {\r\n    return (\r\n        <table className=\"table table-bordered table-sm small\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Sr. No.</th>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {store.allusers.map((items, index) => (\r\n                    <tr key={index}>\r\n                    <td>{items.id}</td>    \r\n                    <td>{items.name}</td>\r\n                        <td>{items.email}</td>\r\n                        <td>\r\n                            <button type=\"button\"\r\n                                onClick={() => editRow(items)}\r\n                                className=\"btn btn-xs btn-success\">\r\n                                <i className=\"fa fa-edit\"></i>\r\n                            </button>&nbsp;<button type=\"button\"\r\n                                onClick={() => deleteRow(items)}\r\n                                className=\"btn btn-xs btn-danger\">\r\n                                <i className=\"fa fa-trash\"></i>\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Adduser({ userInput, addRow, user }) {\r\n    return (\r\n        <form onSubmit={addRow}>\r\n            <h5>Add User</h5>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Name...\"\r\n                    name=\"name\"\r\n                    value={user.name}\r\n                    onChange={userInput}\r\n                    required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control form-control-sm\" placeholder=\"Email...\"\r\n                    name=\"email\"\r\n                    value={user.email}\r\n                    onChange={userInput}\r\n                    required />\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <hr />\r\n                <button type=\"submit\" className=\"btn btn-success btn-sm\">Add User</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Edituser({ edituser, edituserInput, saveEditUser, hideEdit }) {\r\n    return (\r\n        <form onSubmit={saveEditUser}>\r\n            <h5>Edit User</h5>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control form-control-sm\" placeholder=\"Name...\"\r\n                    name=\"name\"\r\n                    value={edituser.name}\r\n                    onChange={edituserInput}\r\n                    required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control form-control-sm\" placeholder=\"Email...\"\r\n                    name=\"email\"\r\n                    value={edituser.email}\r\n                    onChange={edituserInput}\r\n                    required />\r\n\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <hr />\r\n                <button type=\"submit\" className=\"btn btn-success btn-sm\">Save</button>&nbsp;\r\n                <button type=\"button\" onClick={hideEdit} className=\"btn btn-warning btn-sm\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteUser, editUser, addUser, updateUser } from './index'\nimport Allusers from './components/allusers'\nimport Adduser from './components/adduser';\nimport Edituser from './components/edituser';\n\nfunction App() {\n  const store = useSelector(store => store);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(true);\n  const [user, setUser] = useState({ \"name\": \"\", \"email\": \"\" });\n  const [edituser, setEditUser] = useState({ \"name\": \"\", \"email\": \"\" });\n  const userInput = (e) => { setUser({ ...user, \"id\": store.allusers.length + 1, [e.target.name]: e.target.value }) }\n  const hideEdit = () => { setShow(true); }\n  const editRow = (item) => {\n    setShow(false); setEditUser({ \"id\": item.id, \"name\": item.name, \"email\": item.email })\n  }\n  const deleteRow = (item) => {\n    let c = window.confirm(\"Are you sure, you want to delete this row?\");\n    if (c) { dispatch(deleteUser(item)) }\n  }\n  const addRow = (event) => {\n    event.preventDefault();\n    dispatch(addUser(user));\n    setUser({ ...user, name: \"\", email: '' });\n  }\n  const edituserInput = (e) => {\n    setEditUser({ ...edituser, [e.target.name]: e.target.value })\n  }\n  const saveEditUser = event => {\n    event.preventDefault();\n    dispatch(updateUser(edituser))\n    setUser({ ...edituser, name: \"\", email: '' });\n    setShow(true);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"pageTitle\">\n        <Container>\n          <Row>\n            <Col md={8} className=\"mx-auto\">\n              <h4>xtReduxCrud</h4>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <Container>\n        <Row>\n          <Col md={8} className=\"mx-auto\">\n            {show ? <Adduser editRow={editRow} deleteRow={deleteRow} addRow={addRow} user={user} userInput={userInput} /> : <Edituser edituser={edituser} edituserInput={edituserInput} saveEditUser={saveEditUser} hideEdit={hideEdit} />}\n          </Col>\n          <Col md={8} className=\"mx-auto\">\n            <Allusers store={store} editRow={editRow} deleteRow={deleteRow} />\n          </Col>\n        </Row>\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nlet cusState = {\n  allusers: [{ id: \"1\", \"name\": \"user 1\", \"email\": \"user1@example.com\" }, { id: \"2\", \"name\": \"user 2\", \"email\": \"user2@example.com\" }, { id: \"3\", \"name\": \"user 3\", \"email\": \"user3@example.com\" }, { id: \"4\", \"name\": \"user 4\", \"email\": \"user4@example.com\" }],\n  editUsers: []\n}\nconst reducer = (state = cusState, action) => {\n  switch (action.type) {\n    case \"DELETEUSER\": return { ...state, allusers: state.allusers.filter(items => items !== action.preload) }\n    case \"EDITUSER\":\n      const x = state.allusers.filter(item => item === action.preload);\n      return { ...state, editUsers: state.editUsers = x };\n    case \"ADDUSER\":\n      return { ...state, editUsers: state.allusers.push(action.preload) };\n    case \"UPDATEUSER\":\n      let updtusr = state.allusers.filter(item => item.id === action.preload.id && (item.id = action.preload.id, item.name = action.preload.name, item.email = action.preload.email))\n      return { ...state, allusers: state.allusers, updtusr }\n    default: return (state)\n  }\n}\nexport const deleteUser = (item) => { return { type: \"DELETEUSER\", preload: item } }\nexport const editUser = (item) => { return { type: \"EDITUSER\", preload: item } }\nexport const addUser = (item) => { return { type: \"ADDUSER\", preload: item } }\nexport const updateUser = (item) => { return { type: \"UPDATEUSER\", preload: item } }\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);"],"sourceRoot":""}